#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{babel}
\usepackage{babel}
\usepackage{babel}
\usepackage{babel}






\usepackage{listings}
\renewcommand{\lstlistingname}{Listing}





\usepackage{listings}
\renewcommand{\lstlistingname}{Listing}



\usepackage{listings}
\renewcommand{\lstlistingname}{Listing}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman charter
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
<<<<<<< HEAD
Software Design Document
=======
Requirements Analysis and Specification Document
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename polimiLogo.png
	height 30theight%

\end_inset


\end_layout

\begin_layout Standard
\align center
Daniele Grattarola (Mat.
 853101)
\end_layout

\begin_layout Standard
\align center
Ilyas Inajjar (Mat.
 790009) 
\end_layout

\begin_layout Standard
\align center
Andrea Lui (Mat.
 850680)
\end_layout

\begin_layout Title
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Purpose
<<<<<<< HEAD
\begin_inset CommandInset label
LatexCommand label
name "sub:Purpose"

\end_inset


\end_layout

\begin_layout Standard
The presented document is the Software Design document (SDD) for the MyTaxiServi
ce platform project.
 The main purpose of this document is to be a guideline for the concrete
 implementation of the platform, provide developers with high level descriptions
 of the main algorithms, describe the architectural styles and patter, and
 generally establish the design standards for the development phase.
 This document is intended for stakeholders, software engineers, and programmers
 and must be used as reference throughout the whole development of the system.
 The secondary audience for this document includes system maintainers and
 developers who wish to integrate the platformâ€™s services within their own
 software.
 The design choices listed here must be respected throughout the whole developme
nt of the platform and any other further expansion of the codebase.
=======
\end_layout

\begin_layout Standard
The presented document is the Requirements Analysis and Specification document
 (RASD) for the MyTaxiService platform project.
\end_layout

\begin_layout Standard
The main purpose of this document is to analyze the problems that the new
 system is to solve and the customer's necessities, to identify use cases
 and actors, to describe the functional and non-functional requirements
 of the platform along with existing constraints, and to propose an in-depth
 specification of the system before moving on to the more concrete design
 phase.
\end_layout

\begin_layout Standard
This document is intended for stakeholders, software engineers, and programmers
 and is to be used as reference throughout the whole development of the
 system.
 Each phase of the project must be brought on with this document in mind,
 and any implementation of the system must be clearly designed to reflect
 the specifications presented here.
\end_layout

\begin_layout Standard
The secondary audience for this document includes system maintainers and
 developers who wish to integrate the platform's services within their own
 software.
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Subsection
Scope
<<<<<<< HEAD
\begin_inset CommandInset label
LatexCommand label
name "sub:Scope"

\end_inset


\end_layout

\begin_layout Standard
The descriptions listed in this document define the design language that
 must be used by design stakeholders, and implement the 
\begin_inset Quotes eld
\end_inset

Design leads to code
\begin_inset Quotes erd
\end_inset

 philosophy.
 These design standards represent constraints to the development of the
 codebase, with all unspecified design decisions left to the developers.
\end_layout

\begin_layout Standard
Key reasons for the design language described in this document are: 
\end_layout

\begin_layout Enumerate
To facilitate the development, integration, expansion and maintenance of
 the platform.
\end_layout

\begin_layout Enumerate
To define a business identity (kept consistent in UX and marketing design).
 
\end_layout

\begin_layout Enumerate
To implement the requirements listed in the RASD of the project in a consistent
 way.
 
=======
\end_layout

\begin_layout Standard
The aim of this project is to create the MyTaxiService platform, a web based
 information system to manage the taxi service of Pallet Town.
\end_layout

\begin_layout Standard
The purpose of the platform is: 
\end_layout

\begin_layout Enumerate
To provide users with a web application and a mobile application, with which
 to easily make use of the town's taxi service.
 
\end_layout

\begin_layout Enumerate
To provide taxi drivers with a mobile application, with which to manage
 customers' requests (submitted through the above mentioned systems) 
\end_layout

\begin_layout Standard
In short, the platform is to be an integrated infrastructure to manage the
 initial interaction between customers and taxi drivers, to aid the former
 in requesting a taxi ride, and to enable the latter in managing such requests.
\end_layout

\begin_layout Standard
The platform will therefore be used exclusively to support the town's taxi
 service, and is aimed at making the taxi request process much efficient
 by reducing overall costs, communication overhead and potential requests
 overloads.
\end_layout

\begin_layout Standard
The platform will implement all necessary functions on both the users' side
 and the drivers', while keeping the two aspects separate and unaware of
 each other.
 It will also be given a particular focus to the storage of user data, in
 order to maximize privacy and security, and to the extensibility of the
 system, in order to make the platform flexible to potential changes in
 the requirements.
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Subsection
Definitions, acronyms, and abbreviations 
\begin_inset CommandInset label
LatexCommand label
name "sub:Definitions,-acronyms,-and"

\end_inset


\end_layout

\begin_layout Standard
Throughout this document, the following definitions will be applied without
 further explanations: 
\end_layout

\begin_layout Itemize

\series bold
Platform
\series default
: the set of software applications and hardware infrastructure that make
 up the MyTaxiService service; these include the back-end server software,
 the web application and the mobile application used by the customers, the
 mobile application used by the taxi drivers, and all the necessary hardware
 needed to run the mentioned software and any needed support software.
 
\end_layout

\begin_layout Itemize

\series bold
System
\series default
: any subset of software components of the platform.
 
\end_layout

\begin_layout Itemize

\series bold
Back-end
\series default
: the software run on the back-end server of the platform which is used
 to handle the communication between the user applications.
 The term also addresses all the necessary software components that are
 needed to store data, perform calculations and manage the hardware (e.g.
 an operating system).
 
\end_layout

\begin_layout Itemize

\series bold
Customer-side application
\series default
: software run on a personal device which is used to send taxi requests
 to the system and to handle the system's replies.
 It is designed to be used by customers (see below) and can either be a
 mobile application (run on a smartphone or tablet) or a web application
 (run on any personal device through an Internet browser).
 
\end_layout

\begin_layout Itemize

\series bold
Taxi-side application
\series default
: software run on a personal device which is used to manage taxi requests
 forwarded by the system and to reply to the system with information on
 how to handle the requests.
 It is designed to be used by taxi drivers (see below) and is a mobile applicati
on (run on a smartphone or tablet).
 
\end_layout

\begin_layout Itemize

\series bold
User-side application
\series default
: the set of customer-side and taxi-side applications 
\end_layout

\begin_layout Itemize

\series bold
Taxi driver
\series default
: the owner of a taxi license in Pallet Town, who uses the taxi-side application
 to interact with the platform.
 
\end_layout

\begin_layout Itemize

\series bold
Customer
\series default
: a person which intends to exploit the taxi service of the town, and who
 uses the user-side applications to interact with the platform.
 
\end_layout

\begin_layout Itemize

\series bold
User
\series default
: any customer or taxi driver who uses a user-side application.
 
\end_layout

\begin_layout Standard
The following acronyms will also be used in place of the extended form:
 
\end_layout

\begin_layout Itemize

\series bold
<<<<<<< HEAD
SDD: 
\series default
Software Design Document
\end_layout

\begin_layout Itemize

\series bold
=======
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
RASD
\series default
: Requirement Analysis and Specification Document 
\end_layout

\begin_layout Itemize

\series bold
CGI
\series default
: Common Gateway Interface 
\end_layout

\begin_layout Itemize

\series bold
DBMS
\series default
: Data Base Management System 
\end_layout

<<<<<<< HEAD
=======
\begin_layout Itemize

\series bold
RTO
\series default
: Recovery Time Objective 
\end_layout

\begin_layout Itemize

\series bold
RPO
\series default
: Recovery Point Objective 
\end_layout

\begin_layout Itemize

\series bold
SOC
\series default
: System On a Chip 
\end_layout

>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\begin_layout Standard
The following convention will be used to refer to different items in the
 document:
\end_layout

\begin_layout Itemize

\series bold
sec.
 / secs.
\series default
: section / sections
\end_layout

\begin_layout Itemize

\series bold
req.
\series default
: requirement.
\end_layout

\begin_layout Standard
A typical use of the aforementioned abbreviation would be in the form 
\begin_inset Quotes eld
\end_inset

element Xx, sec.
 x.x.x
\begin_inset Quotes erd
\end_inset

 (e.g.
 
\shape italic
req.
 1, sec.
 1.3
\shape default
 - if this section contained a numbered requirement with index 1).
\end_layout

\begin_layout Standard
One last observation is to be done regarding the use of the singular 
\shape italic
they
\shape default
, which will be used to refer to single persons throughout the whole document.
 
\end_layout

\begin_layout Subsection
<<<<<<< HEAD
Document structure
\begin_inset CommandInset label
LatexCommand label
name "sub:Document-structure"

\end_inset


\end_layout

\begin_layout Standard
The presented SDD is divided in sections and structured as follows: 
=======
Overview
\end_layout

\begin_layout Standard
The presented RASD is divided in sections and structured as follows: 
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Itemize

\series bold
Section 1 - Introduction
\series default
<<<<<<< HEAD
: contains support information to better understand the presented document.
=======
: contains support information to better understand the presented document
 and provides a brief introduction of the project, with its scope and general
 goals.
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
 
\end_layout

\begin_layout Itemize

\series bold
<<<<<<< HEAD
Section 2 - Architectural design
\series default
: 
\end_layout

\begin_layout Itemize

\series bold
Section 3 - Algorithms design
\series default
: 
=======
Section 2 - Overall description
\series default
: contains a high level descriptions of the platform to be created, with
 its functions, conceptual structure, relations with the outside world and
 design constraints.
 
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Itemize

\series bold
<<<<<<< HEAD
Section 4 - User interface design
\series default
: 
=======
Section 3 - Requirements
\series default
: contains an in-depth description of the platform's functional and non
 functional requirements, its use cases and actors, and a software design
 guide for developers.
 
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Itemize

\series bold
<<<<<<< HEAD
Section 5 - Requirements traceability
\series default
: 
=======
Section 4 - Alloy modeling
\series default
: contains a description of the platform in the Alloy modeling language.
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Itemize

\series bold
<<<<<<< HEAD
Section 6 - Additional comments
\series default
: contains a summary of the hours spent in producing the document.
\end_layout

\begin_layout Section
Architectural Design
\end_layout

\begin_layout Subsection
Overview 
\begin_inset CommandInset label
LatexCommand label
name "sub:Architectural-Overview"
=======
Section 5 - Additional comments
\series default
: contains a summary of the hours spent in producing the document.
 
\end_layout

\begin_layout Section
Overall Description
\end_layout

\begin_layout Subsection
Product perspective
\end_layout

\begin_layout Standard
The platform aims at replacing the traditional means of communication between
 taxi drivers and customers, and it is therefore designed as a stand-alone
 entity that is able to operate with a minimum set of dependencies towards
 external systems.
\end_layout

\begin_layout Subsubsection
Software interfaces 
\begin_inset CommandInset label
LatexCommand label
name "sub:Software-Interfaces"
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a

\end_inset


\end_layout

<<<<<<< HEAD
\begin_layout Subsection
High level components and their interaction
\begin_inset CommandInset label
LatexCommand label
name "sub:High-Level-Components"

\end_inset


\end_layout

\begin_layout Standard
// App-Backend interaction
\end_layout

\begin_layout Subsection
Component view
\begin_inset CommandInset label
LatexCommand label
name "sub:Component-View"

\end_inset


\end_layout

\begin_layout Standard
// Component view diagrams
\end_layout

\begin_layout Subsection
Deployment view
\begin_inset CommandInset label
LatexCommand label
name "sub:Deployment-View"

\end_inset


\end_layout

\begin_layout Standard
// Deployment view diagrams
\end_layout

\begin_layout Subsection
Runtime view
\begin_inset CommandInset label
LatexCommand label
name "sub:Runtime-View"

\end_inset


\end_layout

\begin_layout Standard
// Sequence diagram on steroids
\end_layout

\begin_layout Subsection
Component interfaces
\begin_inset CommandInset label
LatexCommand label
name "sub:Component-Interfaces"
=======
\begin_layout Itemize

\series bold
Google Maps API
\series default
: used in both the back-end and the taxi-side applications, this free API
 is necessary to elaborate routes and display maps.
 The system interacts with the API through standard GET requests.
\end_layout

\begin_deeper
\begin_layout Itemize
Mnemonic: map rendering and route elaboration 
\end_layout

\begin_layout Itemize
Documentation: https://developers.google.com/maps/ 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
GPS
\series default
: this well known system is required by the mobile applications to get informati
on about the users' position.
 The interaction happens through the standard GPS protocol provided by the
 OS of the users' devices.
\end_layout

\begin_deeper
\begin_layout Itemize
Mnemonic: user position 
\end_layout

\begin_layout Itemize
Documentation: refer to OS-specific documentation 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Red Hat Enterprise Linux
\series default
: operating system run on the back-end server.
\end_layout

\begin_deeper
\begin_layout Itemize
Mnemonics: back-end OS 
\end_layout

\begin_layout Itemize
Documentation: https://access.redhat.com/documentation/en/red-hat-enterprise-linux
/ 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Apache WebServer
\series default
: software bundle run on the back-end, which is used to allow interaction
 between the back-end system and the user-side application.
 It is used to handle standard HTTP requests from the customer-side web
 application and to provide CGI services to all the user-side applications.
\end_layout

\begin_deeper
\begin_layout Itemize
Mnemonics: web-server 
\end_layout

\begin_layout Itemize
Documentation: https://httpd.apache.org/docs/2.4/ 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
SQLite
\series default
: DBMS software run on the back-end, which is used to store user data in
 a non-resource-intensive fashion.
\end_layout

\begin_deeper
\begin_layout Itemize
Mnemonics: DBMS 
\end_layout

\begin_layout Itemize
Documentation: https://www.sqlite.org/docs.html 
\end_layout

\end_deeper
\begin_layout Subsubsection
User interfaces
\begin_inset CommandInset label
LatexCommand label
name "sub:User-interface"
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a

\end_inset


\end_layout

\begin_layout Standard
<<<<<<< HEAD
// Extension of 2.6 (?)
\end_layout

\begin_layout Subsection
Selected architectural styles and patterns
\begin_inset CommandInset label
LatexCommand label
name "sub:Selected-Architectural"

\end_inset


\end_layout

\begin_layout Standard
// MVC + Client-Server
\end_layout

\begin_layout Subsection
Other design decisions
\begin_inset CommandInset label
LatexCommand label
name "sub:Other-Design"
=======
The platform must be accessible to users through three different interfaces,
 which must be transparent to the back-end and must provide a unified user
 experience.
 
\end_layout

\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a

\end_inset


<<<<<<< HEAD
\end_layout

\begin_layout Section
Algorithm Design
\end_layout

\begin_layout Subsection
Ride lifecycle
\begin_inset CommandInset label
LatexCommand label
name "sub:Ride-lifecycle"
=======
\series bold
[I1]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a

\end_inset


\end_layout

<<<<<<< HEAD
\begin_layout Standard
// Creation > add data > opt:wait for changes > alt:cancel/execute > opt:report
 > archive
\end_layout

\begin_layout Subsection
Queue manager
\begin_inset CommandInset label
LatexCommand label
name "sub:Queue-manager"
=======
\end_inset


\series bold
Customer web application
\series default
: standard dynamic website generated with information associated to the
 user.
 It is accessible through any standard web browser.
 
\end_layout

\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a

\end_inset


<<<<<<< HEAD
\end_layout

\begin_layout Standard
// See RASD
\end_layout

\begin_layout Subsection
Report processing
\begin_inset CommandInset label
LatexCommand label
name "sub:Report-processing"
=======
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[I2]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a

\end_inset


<<<<<<< HEAD
\end_layout

\begin_layout Section
User Interface Design
\end_layout

\begin_layout Standard
// Mockups + Activity navigation
\end_layout

\begin_layout Section
Requirements Traceability
\end_layout

\begin_layout Standard
// How the design decisions reflect the specified requirements
\end_layout

\begin_layout Section
Additional comments
=======
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Customer-side mobile application
\series default
: mobile application developed with proprietary graphical libraries in order
 to maintain the same business identity throughout the different mobile
 OSs that the application targets.
 
\end_layout

\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[I3]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Taxi-side mobile application
\series default
: mobile application developed with proprietary graphical libraries in order
 to maintain the same business identity throughout the different mobile
 OSs that the application targets.
 
\end_layout

\begin_layout Subsubsection
Device support
\begin_inset CommandInset label
LatexCommand label
name "sub:Device-support"

\end_inset


\end_layout

\begin_layout Standard
The back-end system is designed to be run exclusively on usual x64 server
 hardware and may therefore require fine-tuning of its environment, but
 needs to be flexible for hardware scaling (such as replication) in order
 to ensure its longevity.
\end_layout

\begin_layout Standard
The user-side mobile applications, on the other hand, are designed to be
 run on standard SOC architectures like the vast majority that is found
 on smartphones and tablets, and take into account the differences in the
 mobile operating systems that can be run on the SOC.
\end_layout

\begin_layout Standard
Finally, the customer-side web application does not have specific device
 requirements, since it relies on a different level of abstraction (web
 browser) which is not to be considered as a hardware interface.
\end_layout

\begin_layout Subsection
Product functions
\begin_inset CommandInset label
LatexCommand label
name "sub:Product-functions"

\end_inset


\end_layout

\begin_layout Standard
The fully developed platform should implement the following high level functions.
 
\end_layout

\begin_layout Itemize

\series bold
Customer-side application
\series default
:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F1]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Allow users to request a taxi.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F2]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Allow users to manage their profile.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F3]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Allow users to issue taxi reports.
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Taxi-side application
\series default
:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F4]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Allow users to manage incoming requests.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F5]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Allow users to manage their profile.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F6]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Allow users to issue customer reports.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F7]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Allow users to report a technical problem.
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Generic platform functions: 
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F8]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Manage user authentication processes.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[F9]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

Manage taxi queues in the different zones of the town.
 
\end_layout

\end_deeper
\begin_layout Subsection
Actors and related functionalities
\begin_inset CommandInset label
LatexCommand label
name "sub:Actors-and-related"

\end_inset


\end_layout

\begin_layout Standard
The platform may have different functional and non-functional requirements
 based on the user that is interacting with it.
 Throughout this document, the set of these different requirements has been
 referred to with the terminology specified in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Definitions,-acronyms,-and"

\end_inset

 (e.g.
 taxi-side application, customer-side application, etc.).
\end_layout

\begin_layout Standard
This section, instead, is aimed at giving a high level description of the
 platform based on the different actors that participate in its use: 
\end_layout

\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[A1]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold

\begin_inset CommandInset label
LatexCommand label
name "-Guest:-any"

\end_inset

 Guest
\series default
: any person who wishes to start a session with the platform through one
 of the user-side applications.
 A1 actors may:
\end_layout

\begin_deeper
\begin_layout Itemize
Register a profile into the platform 
\end_layout

\begin_layout Itemize
Log into the platform 
\end_layout

\begin_layout Itemize
Retrieve their password 
\end_layout

\begin_layout Standard
After completing a login, A1 actors may become either of the two following
 types of actor.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[A2]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold

\begin_inset CommandInset label
LatexCommand label
name "-Customer:-a"

\end_inset

 Customer
\series default
: a person as defined in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Definitions,-acronyms,-and"

\end_inset

.
 Based on what actions A2 completes, they can be further specialized in:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[A2.1]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold

\begin_inset CommandInset label
LatexCommand label
name "-Logged-in-Customer:"

\end_inset

 Logged-in Customer
\series default
: an A1 actor who logged in to the platform with a customer profile.
 A2.1 actors may:
\end_layout

\begin_deeper
\begin_layout Itemize
Issue a taxi request 
\end_layout

\begin_layout Itemize
View and edit their profile 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[A2.2]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold

\begin_inset CommandInset label
LatexCommand label
name "-Passenger:-an"

\end_inset

 Passenger
\series default
: an A2.1 actor who issued a taxi request.
 A2.2 actors may:
\end_layout

\begin_deeper
\begin_layout Itemize
Cancel or edit the issued taxi request 
\end_layout

\begin_layout Itemize
Issue a taxi report 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[A3]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold

\begin_inset CommandInset label
LatexCommand label
name "-Taxi-driver:"

\end_inset

 Taxi driver
\series default
: a person as defined in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Definitions,-acronyms,-and"

\end_inset

.
 A3 actors may:
\end_layout

\begin_deeper
\begin_layout Itemize
Handle (accept or refuse) a taxi request issued by an A2 actor.
 
\end_layout

\begin_layout Itemize
Edit their availability status 
\end_layout

\begin_layout Itemize
Issue a customer report 
\end_layout

\begin_layout Itemize
Report a technical problem 
\end_layout

\end_deeper
\begin_layout Subsubsection
User characteristics
\end_layout

\begin_layout Standard
Users do not need specific competences to use the app other than a basic
 knowledge of web browsing (customers only) and of their mobile operating
 system (both customers and taxi drivers).
\end_layout

\begin_layout Subsection
Constraints
\begin_inset CommandInset label
LatexCommand label
name "sub:Constraints"

\end_inset


\end_layout

\begin_layout Standard
The development of the platform will be limited by the following constraints
 to which the system must be subject to.
 These are not listed as part of the specific requirements of the platform
 because they stem from circumstances beyond the designers' control, and
 are not directly part of the customer's requests.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[C1]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Privacy policy
\series default
: processing of user data, be it personal or related to the use of the platform,
 is to be carried out according to the national laws and the ways and means
 of said processing must be clearly defined and available to the users at
 any time.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[C2]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Taxi licenses
\series default
: the use of the taxi-side application and the related access to the platform,
 is intended exclusively for taxi drivers officially recognized by the town's
 appropriate taxi organizations.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[C3]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Data integrity and data security
\series default
: users' personal data must be stored according to specific standards that
 guarantee their integrity and security.
 Further analysis of this constraint will be carried out in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Security-requirements"

\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[C4]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Legal waiver of responsibility
\series default
: due to the nature of the platform's domain, the use of the platform can
 be associated to car accidents and other related possible injuries; users
 are therefore required to accept a legal disclaimer, in order to use the
 platform.
 
\end_layout

\begin_layout Subsection
Domain assumptions
\begin_inset CommandInset label
LatexCommand label
name "sub:Domain-Assumptions"

\end_inset


\end_layout

\begin_layout Standard
Some domain assumption have to be introduced in order to further define
 the scope of the project, and to clearly state under which assumptions
 the development should proceed in those areas that are not explicitly covered
 by the initial customer's specification.
\end_layout

\begin_layout Standard
The assumptions are the following: 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[DA1]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

It is assumed that the user-side devices are capable of running the intended
 user-side applications, according to the descriptions in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Device-support"

\end_inset

.
 Hardware or software compatibilities will not be discussed further.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[DA2]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

It is assumed that a public database exists, which can be exploited to perform
 checks on the official status of taxi drivers in order to ensure the satisfacti
on of constraint C2, sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Constraints"

\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[DA3]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

It is assumed that the number of users in the first year of operation will
 not exceed the platform's capacity, and modifications to the platform will
 not be needed.
 Later modifications are not discussed in the present document.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[DA4]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

It is assumed that any preexisting taxi reservation service shall not be
 integrated with the platform.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[DA5]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

It is assumed that the zones in which the town is divided are static and
 do not change frequently.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[DA6]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

It is assumed that the town's taxi drivers are uniformly distributed between
 the zones.
 
\end_layout

\begin_layout Section
Specific Requirements
\end_layout

\begin_layout Standard
This section of the document is dedicated at giving an in-depth description
 of the platform's requirements, and is to be kept as reference during all
 future phases of development.
\end_layout

\begin_layout Subsection
External interfaces
\begin_inset CommandInset label
LatexCommand label
name "sub:External-interfaces"

\end_inset


\end_layout

\begin_layout Standard
Being MyTaxiService a fully service-oriented platform, its only external
 interfaces must be those reserved for the final users; there is no need
 to design specific maintenance access to the back-end system as this is
 already fully standardized and does not need specific functionalities other
 than the usual system administration tools.
\end_layout

\begin_layout Standard
As briefly described in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:User-interface"

\end_inset

, the main principle that must guide the design of the external interfaces
 of the platform is that of business identity continuity; therefore, this
 section also contains a set of design mock-ups that are to be kept as reference
 during the development of the user interfaces.
\end_layout

\begin_layout Subsubsection
Interface requirements
\end_layout

\begin_layout Enumerate
Users must be able to access any function offered by the platform (and intended
 for them) in no more than 5 actions (clicks, taps, scrolling, form filling...).
 
\end_layout

\begin_layout Enumerate
The customer-side web application (interface I1, sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:User-interface"

\end_inset

) must implement a responsive design in order to fit most screen sizes.
 
\end_layout

\begin_layout Enumerate
The user-side interfaces must implement the same design language throughout
 the supported platforms, in order to maintain a consistent business identity.
 
\end_layout

\begin_layout Enumerate
All customer-side interfaces must enable access to the same functionalities.
 
\end_layout

\begin_layout Subsubsection
Interface mock-ups
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Mockups/mockup1.png
	height 90theight%

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Mockups/mockup2.png
	height 90theight%

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Mockups/Web.png
	height 90theight%

\end_inset


\end_layout

\begin_layout Subsection
Functional requirements
\end_layout

\begin_layout Standard
The following set of functional requirements must be kept as official reference
 for all further phases of development of the platform.
\end_layout

\begin_layout Standard
These requirements are meant as a more in-depth description of the main
 system functionalities listed in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Product-functions"

\end_inset

, and must be considered alongside the domain assumptions in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Domain-Assumptions"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Back-end requirements
\begin_inset CommandInset label
LatexCommand label
name "sub:Back-end-requirements"

\end_inset


\end_layout

\begin_layout Enumerate
The system must act as the central point of communication between taxi drivers
 and customers (functions F1 and F4).
\end_layout

\begin_deeper
\begin_layout Enumerate
The system must forward the customers' requests to taxi drivers.
 
\end_layout

\begin_layout Enumerate
The system must forward the taxi drivers' replies (in response to requests
 of point 1.(a)) to customers.
 
\end_layout

\begin_layout Enumerate
The system must manage the exceptions that may happen in the flow of events
 (see sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Flow-of-events"

\end_inset

 for more specific description of these exceptions) 
\end_layout

\end_deeper
\begin_layout Enumerate
The system must manage the customers taxi reservation requests and forward
 them to taxi drivers when necessary.
 (functions F1 and F4).
 
\end_layout

\begin_layout Enumerate
The system must manage the taxi queues associated to the different zones
 of the city (function F9).
\end_layout

\begin_deeper
\begin_layout Enumerate
The application must keep track of the availability statuses of all taxi
 drivers (also see req.
 3, sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Taxi-side-application-specific"

\end_inset

) and manage the queues accordingly.
 
\end_layout

\end_deeper
\begin_layout Enumerate
The system must manage the operational databases.
\end_layout

\begin_deeper
\begin_layout Enumerate
The system must store user operation critical data (username, password,
 e-mail address, name, date of birth).
 
\end_layout

\begin_layout Enumerate
The system must keep track of changes in user information when prompted
 (functions F2 and F5).
 
\end_layout

\begin_layout Enumerate
The system must store user records submitted through the 
\shape italic
Report
\shape default
 functions (functions F3 and F6).
 
\end_layout

\end_deeper
\begin_layout Enumerate
The system must perform the necessary validation and consistency checks
 on any data it handles in order to ensure the functional and non functional
 requirements listed in the following sections.
 
\end_layout

\begin_layout Subsubsection
Generic user application requirements
\end_layout

\begin_layout Enumerate
The application must act as external interface between users and the back-end.
\end_layout

\begin_deeper
\begin_layout Enumerate
The application must enable users to register into the platform.
 
\end_layout

\begin_layout Enumerate
The application must enable users to log into the platform.
 
\end_layout

\begin_layout Enumerate
The application must provide users with an interface to manage their personal
 information (functions F2 and F5).
 
\end_layout

\end_deeper
\begin_layout Enumerate
The application must enable registered users to retrieve a forgotten password
 (by sending them a temporary password on the email address associated to
 the account)
\end_layout

\begin_layout Enumerate
The application must display confirmations and error messages forwarded
 by the back-end (see sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Flow-of-events"

\end_inset

 and req.
 1, sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Back-end-requirements"

\end_inset

).
 
\end_layout

\begin_layout Enumerate
The application must provide all the implementation-specific requirements
 listed in the following sections.
 
\end_layout

\begin_layout Subsubsection
Taxi-side application specific requirements
\begin_inset CommandInset label
LatexCommand label
name "sub:Taxi-side-application-specific"

\end_inset


\end_layout

\begin_layout Enumerate
The application must notify the taxi driver when a request from a customer
 is forwarded by the back-end (function F4).
 
\end_layout

\begin_layout Enumerate
The application must show the taxi driver's position in their queue.
 
\end_layout

\begin_layout Enumerate
The application must enable the taxi driver to toggle their availability
 status between 
\shape italic
available 
\shape default
and 
\shape italic
unavailable
\shape default
.
 
\end_layout

\begin_layout Enumerate
The application must enable the taxi driver to submit 
\shape italic
Customer
\shape default
 reports (function F6).
\end_layout

\begin_deeper
\begin_layout Enumerate
The application must require information about the ride if the information
 is not directly deductible from the known data.
 
\end_layout

\end_deeper
\begin_layout Enumerate
The application must enable the taxi driver to submit 
\shape italic
Technical problem
\shape default
 reports (function F7).
\end_layout

\begin_deeper
\begin_layout Enumerate
The application must require information about the technical problem before
 submitting the report to the system.
 
\end_layout

\begin_layout Enumerate
The application must require the taxi driver to state whether they want
 a replacement to complete the ride (if the technical problem happens when
 a passenger is on board) before submitting the report to the system.
 
\end_layout

\end_deeper
\begin_layout Subsubsection
Customer-side application specific requirements
\begin_inset CommandInset label
LatexCommand label
name "sub:Customer-side-application-specif"

\end_inset


\end_layout

\begin_layout Enumerate
The application must enable the customer to request the services of a taxi.
 (function F1).
\end_layout

\begin_deeper
\begin_layout Enumerate
The application must enable the customer to request a taxi in the very short
 term (the service is exploited as soon as the taxi is available).
 
\end_layout

\begin_layout Enumerate
The application must enable the customer to reserve a taxi in advance.
\end_layout

\begin_deeper
\begin_layout Enumerate
The application must require the customer's destination before submitting
 this kind of request to the system.
 
\end_layout

\end_deeper
\begin_layout Enumerate
The application must enable the customer to select the 
\shape italic
Taxi sharing
\shape default
 option (it allows users with similar routes at the same hour to share the
 taxi and split the fee)
\end_layout

\begin_deeper
\begin_layout Enumerate
The application must require the customer's starting point and destination
 before submitting this kind of request to the system.
 
\end_layout

\end_deeper
\begin_layout Enumerate
The application must enable the customer to select both options of points
 1.(b) and 1.(c) of this section at the same time.
 
\end_layout

\begin_layout Enumerate
The application must enable the customer to reserve a ride for more than
 1 person (see req.
 4, sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Functional-constraints"

\end_inset

)
\end_layout

\end_deeper
\begin_layout Enumerate
The application must enable the customer to submit a 
\shape italic
Taxi 
\shape default
reports (function F3).
\end_layout

\begin_deeper
\begin_layout Enumerate
The application must require information about the ride if the information
 is not directly deductible from the known data.
 
\end_layout

\end_deeper
\begin_layout Subsubsection
Functional constraints
\begin_inset CommandInset label
LatexCommand label
name "sub:Functional-constraints"

\end_inset


\end_layout

\begin_layout Enumerate
Taxi reservations must can only be issued at least 2 hours before the requested
 time of the ride (function F1, associated to req.
 1.(b), sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Customer-side-application-specif"

\end_inset

).
 
\end_layout

\begin_layout Enumerate
Requests associated to taxi reservations must be forwarded to taxi drivers
 exactly 10 minutes before the requested time (function F9, associated to
 req.
 1.(b), sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Customer-side-application-specif"

\end_inset

).
 
\end_layout

\begin_layout Enumerate

\shape italic
Taxi
\shape default
 and 
\shape italic
Customer 
\shape default
reports must be accepted only on condition that the ride happened in a 24
 hours time frame from the submission request functions (functions F3 and
 F6).
 
\end_layout

\begin_layout Enumerate
A 
\shape italic
Ride
\shape default
 object must allow up to 6 possible passenger between application users
 (possibly in 
\shape italic
Car sharing 
\shape default
mode) and additional passenger added by a user (see requirement 1.(e), sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Customer-side-application-specif"

\end_inset

)
\end_layout

\begin_layout Subsection
Use cases
\end_layout

\begin_layout Standard
This section contains a graphical UML description of the possible use cases
 of the platform, associated to the respective actors.
\end_layout

\begin_layout Standard
A more in-depth description of the use cases will be given in secs.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Scenarios"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Flow-of-events"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Model1__UseCaseDiagram1_17.svg
	width 100text%

\end_inset


\end_layout

\begin_layout Subsection
Entities and objects
\end_layout

\begin_layout Subsubsection
Logical database requirements
\end_layout

\begin_layout Standard
The majority of data processed by the DBMS consists of Java 
\shape italic
String 
\shape default
and 
\shape italic
Date 
\shape default
objects.
 Images and complex objects might be stored in the database, too, and must
 therefore be considered during the design of the database.
\end_layout

\begin_layout Standard
The majority of stored data is not frequently accessed as most of the operationa
l variables are strictly mutable (users' positions, queues, non-booked rides)
 and therefore not needed to be stored.
\end_layout

\begin_layout Standard
Stored data might consist of stable personal information of the users and,
 while not immutable, it can be considered as rarely accessed.
\end_layout

\begin_layout Standard
A deeper insight on the data classes and operational variables is found
 in the next sections of this document, so it is advised to keep this section
 only as a general reference and to approach the design of the database
 by looking at the more specific descriptions given there.
\end_layout

\begin_layout Subsubsection
Class diagram 
\begin_inset CommandInset label
LatexCommand label
name "sub:Class-diagram"

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Model2__ClassDiagram1_20.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Entity behaviors
\begin_inset CommandInset label
LatexCommand label
name "sub:Entity-Behaviors"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[EB1]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Taxi driver
\end_layout

\begin_deeper
\begin_layout Standard
Taxi drivers, once logged in, can choose to toggle their availability between
 the two main statuses 
\shape italic
Available 
\shape default
(if the driver is waiting for incoming requests and is in a local queue)
 and 
\shape italic
Unavailable 
\shape default
(if the driver is unable or unwilling to accept new requests; this applies
 also to drivers who are carrying passengers, who are automatically considered
 
\shape italic
unavailable
\shape default
 once the accept a request).
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[EB2]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Ride 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/StateMachine2__Ride_22.svg
	height 90theight%

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\series bold
[EB3]
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Queue manager 
\end_layout

\begin_deeper
\begin_layout Standard
The queue manager is the software component in charge of smartly managing
 the local queues and reservations scheduling in the platform.
 It has access to all the instances of 
\shape italic
ride, taxi driver 
\shape default
and 
\shape italic
customer
\shape default
 objects and can modify these objects' statuses in reaction to different
 events.
 
\end_layout

\begin_layout Standard
The core algorithms of the queue manager have to:
\end_layout

\begin_layout Itemize
Handle one local queue for each zone of the town.
\end_layout

\begin_layout Itemize
Respond to taxi drivers' replies to customer requests.
\end_layout

\begin_deeper
\begin_layout Itemize
If a taxi driver accepts a ride request, they must be de-queued and set
 as 
\shape italic
Unavailable
\shape default
.
\end_layout

\begin_layout Itemize
If a taxi driver refuses a ride request, they must be de-queued and set
 as 
\shape italic
Unavailable
\shape default

\begin_inset Foot
status open

\begin_layout Plain Layout
This behavior is different from the initial customer specification; it has
 been modified to prevent a possible unwanted situation in which all the
 taxi drivers in a queue refuse the request and:
\end_layout

\begin_layout Enumerate
The taxi drivers are continuously notified with the customer's request.
\end_layout

\begin_layout Enumerate
The user never gets a failure notification, because the system is kept looping
 through a 
\shape italic
de-facto
\shape default
 unavailable queue.
 
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize
If a taxi driver notifies a technical problem (function F7 of sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Product-functions"

\end_inset

), they must be de-queued and set as 
\shape italic
Unavailable.
 
\end_layout

\end_deeper
\begin_layout Itemize
Keep track of all the customer ride reservations and manage eventual changes.
\end_layout

\begin_deeper
\begin_layout Itemize
Dynamically assign taxi drivers to a customer when the requested time arrives.
\end_layout

\begin_layout Itemize
Respond to changes in a customer's reservation (consistency checks are carried
 out by other components of the platform) and possibly remove the request
 from the schedule.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Scenarios
\begin_inset CommandInset label
LatexCommand label
name "sub:Scenarios"

\end_inset


\end_layout

\begin_layout Standard
To help the reader understand the above stated requirements, a brief description
 of how a use case might look like in the real world is given below.
\end_layout

\begin_layout Standard
In the examples, Adam, Michelle and Joanne are customers who intend to request
 a taxi and Hector, Monica, Jim and Samuel are taxi drivers of the town.
\end_layout

\begin_layout Subsubsection
Sign up
\end_layout

\begin_layout Standard
Adam has just downloaded the customer-side app and wants to sign up into
 the platform.
 He requests the customer registration page, fills the form and submits
 the request to the system.
 If Adam's e-mail and username are unique, the system gives Adam a confirmation
 of the success of the operation and redirects Adam to the login page; otherwise
, an error message is displayed on Adam's phone.
\end_layout

\begin_layout Subsubsection
Login
\end_layout

\begin_layout Standard
Adam, now registered, inserts the username and password in the login form
 and clicks the login button; the system checks the information and, if
 the username-password combination is correct, redirects Adam to his own
 user profile page; otherwise, an error message is displayed on Adam's phone.
\end_layout

\begin_layout Subsubsection
Available
\end_layout

\begin_layout Standard
Hector, already logged into the platform, starts his working by day opening
 his taxi-side application and communicating his availability to the system.
 The system updates the taxi queue in Hector's zone and sends Hector a notificat
ion with his position in the queue.
\end_layout

\begin_layout Subsubsection
Taxi request
\begin_inset CommandInset label
LatexCommand label
name "sub:Taxi-request"

\end_inset


\end_layout

\begin_layout Standard
Adam, now logged into the system, wants to book a taxi to go home.
 He opens the taxi request page on the app, and requests a taxi.
 The system forwards Adam's request to the queue associated with Adam's
 position (tracked by the GPS on Adam's phone), and Hector, which is the
 first taxi driver in the queue, is notified with the request.
\end_layout

\begin_layout Standard
Unfortunately, Hector has now decided to take a break and does not want
 to take charge of this ride; he refuses Adam's request by tapping a button
 on the app, and the system forwards the request to Monica, the taxi driver
 immediately after Hector in the queue.
\end_layout

\begin_layout Standard
As she accepts Adam's request, Adam receives a notification on the app with
 the estimated waiting time.
\end_layout

\begin_layout Subsubsection
Book a taxi
\begin_inset CommandInset label
LatexCommand label
name "sub:Book-a-Taxi"

\end_inset


\end_layout

\begin_layout Standard
While on Monica's taxi, Adam wants to book a taxi for that evening at 6
 PM, in order to go to the cinema.
 He opens the 
\shape italic
Taxi request
\shape default
 page of the app, and fills and submits the request form.
\end_layout

\begin_layout Standard
The system checks the information (sending eventual error notifications
 back to Adam) and creates a 
\shape italic
Ride 
\shape default
object which will be kept in a 
\shape italic
Pending
\shape default
 status.
\end_layout

\begin_layout Standard
Ten minutes before 6PM the system will forward Adam's request to the first
 taxi in the queue at that time, and similarly to the previous scenario
 a taxi will be assigned to Adam.
\end_layout

\begin_layout Subsubsection
Car sharing
\end_layout

\begin_layout Standard
Michelle and Joanne live in the same neighborhood, and they both decide
 to go see a fair on the other side of the Town.
 Since they are both short on money, after opening the 
\shape italic
Taxi request 
\shape default
page of the app they both check the 
\shape italic
car sharing 
\shape default
option; after checking the option, the apps automatically adds a field in
 the reservation form in which they must specify their intended destination;
 they then submit their requests.
\end_layout

\begin_layout Standard
The system performs a check on Michelle and Joanne's requests and, since
 their routes match, it automatically assign them to the same taxi.
\end_layout

\begin_layout Standard
Based on whether they decided to book the taxi or simply request it, the
 taxi will be chosen similarly to scenarios 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Book-a-Taxi"

\end_inset

 or 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Taxi-request"

\end_inset

 respectively.
\end_layout

\begin_layout Subsubsection
Manage 
\shape italic
Reserve taxi
\shape default
 request
\end_layout

\begin_layout Standard
Later that day, Adam browses the platform's website from his laptop's browser,
 and opens the 
\shape italic
Manage taxi request
\shape default
 page to change the booking time from 6PM to 7PM.
\end_layout

\begin_layout Standard
The system checks whether Adam's request is acceptable (there must be at
 least two hours between the current time and the requested time), and possibly
 modifies to time on which to forward the request to the queue.
\end_layout

\begin_layout Subsubsection
Report taxi
\end_layout

\begin_layout Standard
Jim picks Adam up at 7PM.
 During the ride Jim lights up a cigarette and is unreasonably rude towards
 Adam.
\end_layout

\begin_layout Standard
Adam opens the 
\shape italic
Report taxi
\shape default
 page on the app, to file a complaint about Jim's behavior.
 The system updates Jim's record with the new report and confirms the success
 of the operation to Adam.
\end_layout

\begin_layout Subsubsection
Report customer
\end_layout

\begin_layout Standard
After the ride, Adam is annoyed by the behavior of Jim and refuses to pay
 for the ride.
\end_layout

\begin_layout Standard
Jim opens the 
\shape italic
Report user
\shape default
 page, fills the complaint form and submits it to the system.
 The system updates Adam's record with the new report and confirms the success
 of the operation to Jim.
\end_layout

\begin_layout Subsubsection
Manage personal information
\end_layout

\begin_layout Standard
Joanne has opened a new main email account.
\end_layout

\begin_layout Standard
She opens her profile page from the app, clicks on the 
\shape italic
edit
\shape default
 button and changes her email address to match the new one; she then submits
 the new information.
\end_layout

\begin_layout Standard
The system performs a check on the information, updates Joanne's profile
 and notifies the success of the operation to Joanne.
\end_layout

\begin_layout Subsubsection
Report problem
\end_layout

\begin_layout Standard
During a ride, Hector has a problem with his taxi's engine and can't bring
 Joanne to her destination.
\end_layout

\begin_layout Standard
Through the 
\shape italic
Report problem
\shape default
 page of the app, he notifies the problem to the system by filling the form
 and submitting.
 The system acknowledges the report and asks Hector if he'll be needing
 a new taxi; Hector confirms, and the system forwards his request to Samuel,
 who is the first taxi driver in Hector and Joanne's current zone.
\end_layout

\begin_layout Subsection
Flow of events
\begin_inset CommandInset label
LatexCommand label
name "sub:Flow-of-events"

\end_inset


\end_layout

\begin_layout Standard
This section contains a description of how different use cases should happen,
 divided in sequential steps.
 The participating actor are those described in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Actors-and-related"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Sign-up
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A1 - Guest
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest is not registered into the system.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The guest requests the registration page.
 
\end_layout

\begin_layout Enumerate
The guest fills the registration form and submits the request.
 
\end_layout

\begin_layout Enumerate
The system checks the uniqueness of the username and e-mail.
 
\end_layout

\begin_layout Enumerate
The system creates the customer (or taxi driver) profile .
 
\end_layout

\begin_layout Enumerate
The system sends the confirmation to the guest.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest is now a registered user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The e-mail or username are not unique or, in the case of a taxi driver sign-up,
 the license is not valid: an error message is shown.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration1__Interaction1__Signup_2.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Login
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A1 - Guest 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest is already registered into the system.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The guest requests the login page.
 
\end_layout

\begin_layout Enumerate
The guest fills the form and submits the request.
 
\end_layout

\begin_layout Enumerate
The system checks the username and password.
 
\end_layout

\begin_layout Enumerate
The system sends a login confirmation.
 
\end_layout

\begin_layout Enumerate
The guest is logged into the system.
 
\end_layout

\begin_layout Enumerate
The guest is redirected to the user main page.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest is now a logged-in user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The username-password combination is incorrect, so the guest cannot log
 in: an error message is shown.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration2__Interaction1__Login_3.eps
	height 100theight%

\end_inset


\end_layout

\begin_layout Subsubsection
Available
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A3 - Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The taxi driver is logged into the system.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The taxi driver opens the app.
 
\end_layout

\begin_layout Enumerate
The taxi driver changes their availability by tapping a button: a request
 is sent to the system.
 
\end_layout

\begin_layout Enumerate
The system updates the queue.
 
\end_layout

\begin_layout Enumerate
The system returns a confirmation to the taxi driver.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The taxi driver has now changed their availability.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The taxi driver is located in a invalid zone and they try to become 
\shape italic
available
\shape default
: an error message is shown.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration10__Interaction1__Available_11.svg
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Taxi request
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" islongtable="true" longtabularalignment="center">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A2.1 - Customer, A3 - Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Both users must be logged in, the taxi driver must be available.
\end_layout

\end_inset
</cell>
</row>
<row newpage="true">
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The customer requests the 
\shape italic
Taxi request
\shape default
 page 
\end_layout

\begin_layout Enumerate
The customer fills the request form according to their preference and sends
 the information to the system: they can choose to request a ride for a
 certain number of passengers, reserve a taxi or enable the 
\shape italic
Taxi sharing 
\shape default
option.
 
\end_layout

\begin_layout Enumerate
Based on the type of request that the customer issued, the system generates
 a request with all the needed data and commits it to the 
\shape italic
Queue manager 
\shape default
(entity E3, sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Entity-Behaviors"

\end_inset

)
\end_layout

\begin_layout Enumerate
The taxi driver can either ignore the request or accept it.
 
\end_layout

\begin_layout Enumerate
If the taxi driver accepts the request, the system notifies to the customer
 the incoming taxi (with an approximate ETA) and changes the availability
 of the taxi driver; otherwise, the system puts the taxi driver at the end
 of the queue and forwards the request to the next first taxi driver of
 the queue.
 
\end_layout

\begin_layout Enumerate
If the issued request was a booking request or a request with 
\shape italic
Taxi sharing 
\shape default
enabled, the system calculates the estimated fee for the passenger and adds
 it to the notification sent to the user.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If the request is accepted by a taxi driver, the customer is now a passenger.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The customer provides incorrect information in the request form: an error
 notification is shown.
 
\end_layout

\begin_layout Itemize
No taxis are available: the system notifies so to the user.
 
\end_layout

\begin_layout Itemize
The customer is not in a valid position (
\emph on
e.g.
 outside the town
\emph default
): an error notification is shown.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration3__Interaction1__Taxi Request_4.svg
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Manage 
\shape italic
Reserve taxi
\shape default
 request
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A2.1 - Customer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The customer must have reserved a taxi.
 
\end_layout

\begin_layout Itemize
The customer must be logged in.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The customer requests the 
\shape italic
Taxi request management
\shape default
 page.
 
\end_layout

\begin_layout Enumerate
The customer can modify the request by filling a
\shape italic
 
\shape default
form and submitting it, or delete the request by tapping (or clicking) a
 button.
 
\end_layout

\begin_layout Enumerate
The system modifies the request and returns a confirmation to the passenger.
 
\end_layout

\begin_layout Enumerate
The request is forwarded to the right local queue accordingly; if the user
 canceled their request, the request is not sent.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
If the customer chooses to modify the request, the request is updated.
 
\end_layout

\begin_layout Itemize
If the customer chooses to delete the request, the request is canceled.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The customer provides incorrect information in the 
\shape italic
Modify request
\shape default
 form: an error message is shown.
 
\end_layout

\begin_layout Itemize
The customer tried to cancel their request too late: an error message is
 shown and the modification is not allowed.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration15__Interaction1__Manage Taxi Request_19.svg
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Report taxi
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A2.2 - Passenger 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The interaction between the passenger and the taxi driver must have happened
 at most 24 hours before.
 
\end_layout

\begin_layout Itemize
The passenger must be logged in.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The passenger requests the 
\shape italic
Report taxi
\shape default
 page.
 
\end_layout

\begin_layout Enumerate
The passenger fills the form and submits the report.
 
\end_layout

\begin_layout Enumerate
The system checks the submitted data.
 
\end_layout

\begin_layout Enumerate
The system updates the taxi driver's record.
 
\end_layout

\begin_layout Enumerate
The system notifies to the passenger the success of the operation.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The taxi driver is reported by the passenger.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The passenger provides incorrect information in the report form: an error
 message is shown.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration7__Interaction1__Report Taxi_8.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Report customer
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A3 - Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The interaction between the passenger and the taxi driver must have happened
 at most 24 hours before.
 
\end_layout

\begin_layout Itemize
The taxi driver must be logged in.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The taxi driver requests the 
\shape italic
Report customer
\shape default
 page.
 
\end_layout

\begin_layout Enumerate
The taxi driver fills the form and submits the report.
 
\end_layout

\begin_layout Enumerate
The system checks the submitted data.
 
\end_layout

\begin_layout Enumerate
The system updates the customer's record.
 
\end_layout

\begin_layout Enumerate
The system notifies to the taxi driver the success of the operation.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The customer is reported by the taxi driver.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The taxi driver provides incorrect information in the report form: an error
 message is shown.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration13__Interaction1__Report Customer_14.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Manage personal information
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A2 - Customer or A3 - Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user must be logged in.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user requests their profile page.
 
\end_layout

\begin_layout Enumerate
The user's personal information is shown on the user's application.
 
\end_layout

\begin_layout Enumerate
The user can begin editing their profile information by tapping (or clicking)
 on the 
\shape italic
Edit
\shape default
 button.
 
\end_layout

\begin_layout Enumerate
The user edits their information and submits the changes to the system.
 
\end_layout

\begin_layout Enumerate
The system performs a check on the new information.
 
\end_layout

\begin_layout Enumerate
If the information is correct, a confirmation is sent back to the user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user profile information is changed.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user provides incorrect information: an error message is shown.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration9__Interaction1__Manage your Personal Info_10.svg
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Report problem
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A3 - Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The taxi driver must be logged in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The taxi driver requests the 
\shape italic
Report problem
\shape default
 page.
 
\end_layout

\begin_layout Enumerate
The taxi driver fills the form and submits the information regarding a technical
 problem that they are experiencing.
 
\end_layout

\begin_layout Enumerate
If the taxi driver has a passenger on board, they can request another taxi
 to drive the passenger to their destination.
 
\end_layout

\begin_layout Enumerate
If the taxi driver requests another taxi the system looks for an available
 taxi driver, with the usual procedure.
 
\end_layout

\begin_layout Enumerate
If a taxi driver accepts the request, a confirmation is sent to the driver
 who is submitting the report.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The technical problem is reported to the system 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The taxi driver is located in a invalid zone: an error message is shown.
 
\end_layout

\begin_layout Itemize
The taxi driver requests a second taxi, but no available taxi is found:
 an error message is shown to the user.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Use_cases_and_Sequence_diagram/SequenceDiagrams svg/svg/Collaboration14__Interaction1__Notify Problem_18.svg
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Performance requirements
\end_layout

\begin_layout Standard
Some non functional requirements regarding performance have been identified
 as follows.
\end_layout

\begin_layout Subsubsection
Back-end performance
\end_layout

\begin_layout Enumerate
The platform must support a number users equals to 3 times the number of
 registered taxi drivers in the Town.
 Estimates must be calculated each year and modifications to the infrastructure
 must be made accordingly.
 
\end_layout

\begin_layout Enumerate
The system must process 99% of requests in less than 5 seconds.
 
\end_layout

\begin_layout Enumerate
The system must support parallel processing of the request to a degree proportio
nal to at least 25% of the average number of requests.
 
\end_layout

\begin_layout Enumerate
Management of the database must be transparent to the user, which must have
 the impression of a continuous interaction with the system.
 
\end_layout

\begin_layout Enumerate
Estimates of the costs of the rides must be precise with a 10% error margin.
 
\end_layout

\begin_layout Enumerate
Estimates of the taxi drivers' ETA must be precise with a 10% error margin.
 
\end_layout

\begin_layout Subsubsection
User-side performance
\end_layout

\begin_layout Enumerate
The mobile user-side applications must be as energy efficient as possible,
 in order to not drain the battery on the users' mobile devices.
 
\end_layout

\begin_layout Enumerate
The users' profile pictures must have a resolution smaller than 1000x1000
 pixels, in order to be efficiently stored, loaded into RAM, and transmitted.
 
\end_layout

\begin_layout Subsection
Availability and reliability requirements
\end_layout

\begin_layout Standard
Since MyTaxiService is a service-oriented platform, its reliability parameters
 directly relate to its availability parameters.
 The platform's ability to function under the stated conditions is indeed
 its ability to respond to users' requests at any given time, hence the
 strict relation between the two.
 It has been decided to treat the two aspect as one, and the related non
 functional requirements are listed in this section.
 
\end_layout

\begin_layout Enumerate
The platform's services must be available to the users 24/7.
 
\end_layout

\begin_layout Enumerate
The RTO parameter must be kept at minimal levels (less than 1 minute) at
 any given time.
\end_layout

\begin_deeper
\begin_layout Enumerate
Mission critical data must be locally mirrored on fast hardware (e.g.
 stored in RAID1 arrays with flash storage).
 
\end_layout

\end_deeper
\begin_layout Enumerate
The RPO parameter must be kept at minimal levels (less than 10 seconds)
 at any given time.
\end_layout

\begin_deeper
\begin_layout Enumerate
Any data must be locally stored in a 10 second time frame from its creation.
 
\end_layout

\begin_layout Enumerate
Any locally stored data must be locally and remotely mirrored in a 1 minute
 time frame from its memorization.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Data integrity checks must be periodically performed between the main data
 storage unit and the secondary backups, in order to ensure the success
 of disaster recovery operations.
 
\end_layout

\begin_layout Enumerate
The implementation of the platform must prefer the absence of service to
 an incorrect or unsound one.
\end_layout

\begin_deeper
\begin_layout Enumerate
No data exchanges must happen during the disaster recovery operations.
 
\end_layout

\begin_layout Enumerate
Data stored in memory in the event of a system failure or security breach
 must be considered corrupt and no attempts must be made at recovering it.
 
\end_layout

\end_deeper
\begin_layout Subsection
Security requirements
\begin_inset CommandInset label
LatexCommand label
name "sub:Security-requirements"

\end_inset


\end_layout

\begin_layout Standard
The following non functional requirements cover the security aspects of
 the platform in order, among other reasons, to satisfy the constraint C3,
 sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Constraints"

\end_inset

.
 
\end_layout

\begin_layout Enumerate
Access to the user data through the intended applications must be password
 protected.
\end_layout

\begin_deeper
\begin_layout Enumerate
A ban system must exists to prevent brute-forcing of the users' passwords.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Sensitive user data (like passwords) must be stored under at least one encryptio
n layer, after having been 
\shape italic
salted
\shape default
.
 This applies to secondary storage, too.
\end_layout

\begin_deeper
\begin_layout Enumerate
Decryption of the above mentioned data must happen exclusively at runtime
 and the 
\shape italic
cleartext 
\shape default
information must never be sent through any communication channels.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Operations on the platform must be performed exclusively by logged users
 (with the exception of the guest registration).
 
\end_layout

\begin_layout Enumerate
HTTP data exchanges between the back-end and the user-side applications
 must be encrypted with a recognized SSL certificate (HTTPS protocol).
 
\end_layout

\begin_layout Enumerate
Access to the back-end system must be protected both via hardware and software
 means.
\end_layout

\begin_deeper
\begin_layout Enumerate
A physical firewall must exists between the Internet and the back-end main
 router.
 
\end_layout

\begin_layout Enumerate
Access to the system must be enabled via IP address whitelisting, rather
 than blacklisting.
 
\end_layout

\begin_layout Enumerate
Root login must be disabled for remote sessions.
 
\end_layout

\begin_layout Enumerate
Password login must be disabled and signed PKA must be enforced, for any
 type of session.
 
\end_layout

\begin_layout Enumerate
Access logs must be kept, backed up, and regularly analyzed.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Mission critical data must be stored with particular attention to data integrity.
 
\end_layout

\begin_layout Subsection
Maintainability requirements
\end_layout

\begin_layout Standard
The following non functional requirements regarding the maintainability
 of the codebase are meant as a small guideline for programmers and designers
 in the development phase.
 
\end_layout

\begin_layout Enumerate
The codebase for all developed software must be highly modular to facilitate
 possible changes in the platform's functions and possible integration with
 other systems; this applies especially to the back-end modules.
 
\end_layout

\begin_layout Enumerate
The codebase for all developed software must be thoroughly documented with
 both in-code comments and official documentation, in order to facilitate
 a possible outsourcing of the maintenance phase.
 
\end_layout

\begin_layout Subsection
Portability requirements
\end_layout

\begin_layout Standard
The following non functional requirements consider technical details of
 the platform's implementation in order to analyze its portability requirements.
\end_layout

\begin_layout Standard
When seen as a whole, the platform consists mainly of its user-side applications
, and the back-end accounts for about 25% of the codebase; nonetheless,
 since the user-side applications are strictly OS dependent, as specified
 in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:User-interface"

\end_inset

, portability is an issue which has to be tackled in back-end development,
 in order to keep costs to a minimum in the case of possible changes in
 the platform (e.g.
 an integration with a preexisting system).
 Therefore: 
\end_layout

\begin_layout Enumerate
The back-end software must be developed in Java Enterprise Edition.
 
\end_layout

\begin_layout Enumerate
Integration with support modules in the back-end must happen through JEE
 libraries.
 
\end_layout

\begin_layout Enumerate
Any system related calls, communication protocols and thread related calls
 in the back-end must be OS independent (the use of wrapper libraries is
 encouraged over a case-by-case analysis).
 
\end_layout

\begin_layout Section
Alloy Modeling
\end_layout

\begin_layout Subsection
Alloy source code
\begin_inset CommandInset label
LatexCommand label
name "sub:Alloy-source-code"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\normalsize\ttfamily},breaklines=true,keywordstyle={\color[RGB]{242,134,10}},morekeywords={assert, pred, all, no, lone, one, some, check, run, but, let, implies, not, iff, in, and, or, set, sig, Int, int, if, then, else, exactly, disj, fact, fun, module, abstract, extends, open, none, univ, iden, seq},morecomment={[l]{//}},morecomment={[s]{/*}{*/}},commentstyle={\color[RGB]{10,200,10}}"
inline false
status open

\begin_layout Plain Layout

/**Signatures**/
\end_layout

\begin_layout Plain Layout

//Sig for Users, having username and mail
\end_layout

\begin_layout Plain Layout

abstract sig User{
\end_layout

\begin_layout Plain Layout

	username : MString,
\end_layout

\begin_layout Plain Layout

	mail : MString
\end_layout

\begin_layout Plain Layout

}{
\end_layout

\begin_layout Plain Layout

	username != mail
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Sig to identify Customers
\end_layout

\begin_layout Plain Layout

abstract sig Customer extends User{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Passenger is a Customer how request a taxi
\end_layout

\begin_layout Plain Layout

sig Passenger extends Customer{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Taxi Driver can be Available
\end_layout

\begin_layout Plain Layout

sig TaxiDriver extends User{
\end_layout

\begin_layout Plain Layout

	license : MString,
\end_layout

\begin_layout Plain Layout

	available : Boolean
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Ride has: one TaxiDriver, one Starting position, a set of Passenger and
 some destination positions
\end_layout

\begin_layout Plain Layout

sig Ride{
\end_layout

\begin_layout Plain Layout

	start : one Position,
\end_layout

\begin_layout Plain Layout

	destinations : some Position,
\end_layout

\begin_layout Plain Layout

	transport : set Passenger,
\end_layout

\begin_layout Plain Layout

	hasDriver : lone TaxiDriver,
\end_layout

\begin_layout Plain Layout

	pending : Boolean
\end_layout

\begin_layout Plain Layout

}{
\end_layout

\begin_layout Plain Layout

	#transport >= 1 and #transport <= 4 and
\end_layout

\begin_layout Plain Layout

	all d:destinations | different[d, start] = True and
\end_layout

\begin_layout Plain Layout

	#hasDriver = 1 iff pending = True 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Queue for each city Zone
\end_layout

\begin_layout Plain Layout

sig Queue{
\end_layout

\begin_layout Plain Layout

	contains : set TaxiDriver
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Manager of Queues
\end_layout

\begin_layout Plain Layout

one sig QueueManager{
\end_layout

\begin_layout Plain Layout

	manage : some Queue
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/**Support Signatures**/
\end_layout

\begin_layout Plain Layout

sig MString{}
\end_layout

\begin_layout Plain Layout

sig Float{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

sig Position{
\end_layout

\begin_layout Plain Layout

	x : Float,
\end_layout

\begin_layout Plain Layout

	y : Float
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

abstract sig Boolean{}
\end_layout

\begin_layout Plain Layout

one sig True extends Boolean {}
\end_layout

\begin_layout Plain Layout

one sig False extends Boolean {}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/**Facts**/
\end_layout

\begin_layout Plain Layout

//All the Passengers are Customers (and also Users)
\end_layout

\begin_layout Plain Layout

fact {
\end_layout

\begin_layout Plain Layout

	Passenger in Customer
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Users are composed by all the TaxiDrivers and Customers
\end_layout

\begin_layout Plain Layout

fact {
\end_layout

\begin_layout Plain Layout

	User = TaxiDriver + Customer
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//No repeteaded Positions
\end_layout

\begin_layout Plain Layout

fact uniquePositions{
\end_layout

\begin_layout Plain Layout

	all p,q:Position | p!=q implies different[p,q] = True 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//All the Positions are used in the Ride sig
\end_layout

\begin_layout Plain Layout

fact noUselessPositions{
\end_layout

\begin_layout Plain Layout

	Ride.start + Ride.destinations = Position
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//No useless Float sig
\end_layout

\begin_layout Plain Layout

fact onlyUsedFloat{
\end_layout

\begin_layout Plain Layout

	Position.x + Position.y = Float
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//A User has unique username and mail
\end_layout

\begin_layout Plain Layout

fact uniqueUsers{
\end_layout

\begin_layout Plain Layout

	all u,w : User | (u.username = w.username or u.mail = w.mail) iff u=w
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//A TaxiDriver is identified by his own license
\end_layout

\begin_layout Plain Layout

fact uniqueLicense{
\end_layout

\begin_layout Plain Layout

	all t1,t2 : TaxiDriver | t1.license = t2.license iff t1 = t2
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//There are no username equals to mail
\end_layout

\begin_layout Plain Layout

fact{
\end_layout

\begin_layout Plain Layout

	User.username & User.mail = none
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Not exists license equals to username and mail
\end_layout

\begin_layout Plain Layout

fact{
\end_layout

\begin_layout Plain Layout

	(User.username + User.mail) & TaxiDriver.license = none
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//The String used are used only for username, mail and license
\end_layout

\begin_layout Plain Layout

fact{
\end_layout

\begin_layout Plain Layout

	User.username + User.mail + TaxiDriver.license = MString
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//a User can be transported at most by one pending Ride
\end_layout

\begin_layout Plain Layout

fact{
\end_layout

\begin_layout Plain Layout

	all u:Ride.transport | (lone r:Ride | r.pending = True and u in r.transport)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//If a Taxi Driver is in a Queue implies his availability
\end_layout

\begin_layout Plain Layout

fact taxiInQueueIsAvailable{
\end_layout

\begin_layout Plain Layout

	all t:TaxiDriver | t in Queue.contains implies t.available = True else t.available
 = False
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Every Taxi Driver belogns at most to one Queue
\end_layout

\begin_layout Plain Layout

fact taxiContainedInOneQueue{
\end_layout

\begin_layout Plain Layout

	all q,p:Queue | q!=p implies (all t:q.contains | !t in p.contains)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Every Queue belongs to the QueueManager
\end_layout

\begin_layout Plain Layout

fact exacltyOneManager{
\end_layout

\begin_layout Plain Layout

	all q:Queue | (one m:QueueManager | q in m.manage)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//For each Ride the number of destinations belongs to the # of Passenger
\end_layout

\begin_layout Plain Layout

fact maxDestinations{
\end_layout

\begin_layout Plain Layout

	all r:Ride | #r.destinations <= #r.transport
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/**Functions **/
\end_layout

\begin_layout Plain Layout

//True if the Positions are different, False otherwise
\end_layout

\begin_layout Plain Layout

fun different[p1,p2 : Position] : Boolean{
\end_layout

\begin_layout Plain Layout

	(p1.x != p2.x or p1.y != p2.y) implies True else False
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/**Assertions**/
\end_layout

\begin_layout Plain Layout

assert differentsUsernames{
\end_layout

\begin_layout Plain Layout

	no u1,u2:User | u1.username = u2.username and u1 != u2
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

assert differentsMail{
\end_layout

\begin_layout Plain Layout

	no u1,u2:User | u1.mail = u2.mail and u1 != u2
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/**Predicates**/
\end_layout

\begin_layout Plain Layout

pred taxiDriverAvailable{
\end_layout

\begin_layout Plain Layout

	all t:TaxiDriver | t.available = True implies (one q:Queue | t in q.contains)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pred intrestingPred{
\end_layout

\begin_layout Plain Layout

	#Passenger > 1
\end_layout

\begin_layout Plain Layout

	#Position < 3
\end_layout

\begin_layout Plain Layout

	#Queue = 2
\end_layout

\begin_layout Plain Layout

	#Ride > 0 and #Ride < 3
\end_layout

\begin_layout Plain Layout

	#TaxiDriver > 1
\end_layout

\begin_layout Plain Layout

	one t:TaxiDriver | t.available = True
\end_layout

\begin_layout Plain Layout

	one r:Ride | r.pending = True
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pred show{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/**Executions**/
\end_layout

\begin_layout Plain Layout

run taxiDriverAvailable for 5
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Alloy output
\end_layout

\begin_layout Standard
The output is shown to give a visual confirmation of the consistency of
 the model, even if it does not add any further information to the document.
\end_layout

\begin_layout Standard
Note that passengers and taxi drivers can be related to more than one ride;
 this is done intentionally, as ride objects do not cease to exist once
 the ride is completed, but are stored and are associated with the user's
 history.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename instance.eps
	height 90theight%
	rotateAngle 90

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename world2.png
	height 90theight%
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Alloy metamodel
\end_layout

\begin_layout Standard
The following platform metamodel was derived from the Alloy code in section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Alloy-source-code"

\end_inset

 and is a further expansion of the class diagram in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Class-diagram"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Metamodel.png
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Additional Comments
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Standard
The production of this document has been a joint effort of all the authors,
 with a fair distribution of the mansions which caused each member of the
 group to work on all the parts of the document.
 
\end_layout

\begin_layout Standard
<<<<<<< HEAD
The production has been carried out between 12/11/2015 and 4/12/2015 for
=======
The production has been carried out between 16/10/2015 and 6/11/2015 for
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
 a total time expense of: 
\end_layout

\begin_layout Itemize

\series bold
Group work
\series default
<<<<<<< HEAD
: hours
=======
: 28 hours
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\begin_layout Itemize

\series bold
Individual work
\series default
:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Daniele Grattarola (Mat.
 853101)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<<<<<<< HEAD
 hours
=======
10.5 hours
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ilyas Inajjar (Mat.
 790009) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<<<<<<< HEAD
 hours
=======
9 hours
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Andrea Lui (Mat.
 850680)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<<<<<<< HEAD
hours
=======
10 hours
>>>>>>> b98f7e3a0a4daf0572cd75de9ee0734b4b36a37a
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_body
\end_document
