#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{array}




\providecommand{\tabularnewline}{\\}

\usepackage{babel}
\graphicspath{{images/}}




\usepackage{babel}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding T1
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
One 
\end_layout

\begin_layout Section
Two
\end_layout

\begin_layout Section
Specific Requirements
\end_layout

\begin_layout Standard
This section of the document is dedicated at giving an in-depth description
 of the platform's requirements, and is to be kept as reference during all
 future phases of development.
\end_layout

\begin_layout Subsection
External interfaces
\end_layout

\begin_layout Standard
Being MyTaxiService a fully service-oriented platform, its only external
 interfaces must be those reserved for the final users; there is no need
 to design specific maintenance access to the back-end system as this is
 already fully standardized and does not need specific functionalities other
 than the usual system administration tools.
\end_layout

\begin_layout Standard
As briefly described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:User-interface"

\end_inset

, the main principle that must guide the design of the external interfaces
 of the platform is that of business identity continuity.
 This section contains a set of design mock-ups that are to be kept as reference
 during the development of the user interfaces.
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsection
Use Cases
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename UseCase
	width 100text%

\end_inset


\end_layout

\begin_layout Subsection
Class Diagram
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ClassDiagram
	width 100text%

\end_inset


\end_layout

\begin_layout Subsection
Scenarios
\end_layout

\begin_layout Standard
To help the reader understand the above stated requirements, a brief description
 of how a use case might look like in the real world is given below.
\end_layout

\begin_layout Standard
In the examples, Adam and Joanne are customers who intend to request a taxi
 and Hector, Monica, Jim and Samuel are taxi drivers of the town.
\end_layout

\begin_layout Subsubsection
Sign up
\end_layout

\begin_layout Standard
Adam has just downloaded the customer-side app and wants to sign up into
 the platform.
 He requests the customer registration page, fills the form and submits
 the request to the system.
 If Adam's e-mail and username are unique, the system gives Adam a confirmation
 of the success of the operation and redirects Adam to the login page; otherwise
, an error message is displayed on Adam's phone.
\end_layout

\begin_layout Subsubsection
Login
\end_layout

\begin_layout Standard
Adam, now registered, inserts the username and password in the login form
 and clicks the login button; the system checks the information and, if
 the username-password combination is correct, redirects Adam to his own
 user profile page; otherwise, an error message is displayed on Adam's phone.
\end_layout

\begin_layout Subsubsection
Available
\end_layout

\begin_layout Standard
Hector, already logged into the platform, starts his working by day opening
 his taxi-side application and communicating his availability to the system.
 The system updates the taxi queue in Hector's zone and sends Hector a notificat
ion with his position in the queue.
\end_layout

\begin_layout Subsubsection
Taxi request
\end_layout

\begin_layout Standard
Adam, now logged into the system, wants to book a taxi to go home.
 He opens the taxi request page on the app, and requests a taxi.
 The system forwards Adam's request to the queue associated with Adam's
 position, and Hector, which is the first taxi driver in the queue, is notified
 with the request.
\end_layout

\begin_layout Standard
Unfortunately, Hector has now decided to take a break and does not want
 to take charge of this ride; he refuses Adam's request by tapping a button
 on the app, and the system forwards the request to Monica, the taxi driver
 immediately after Hector in the queue.
\end_layout

\begin_layout Standard
As she accepts Adam's request, Adam receives a notification on the app with
 the estimated waiting time.
\end_layout

\begin_layout Subsubsection
Book a Taxi
\end_layout

\begin_layout Standard
While on Monica's taxi, Adam wants to book a taxi for that evening at 6
 PM, in order to go to the cinema.
 He opens the 
\shape italic
Taxi request
\shape default
 page of the app, and fills and submits the request form.
\end_layout

\begin_layout Standard
The system checks the information (sending eventual error notifications
 back to Adam) and forwards Adam's request to Jim, by using a specific selection
 algorithm over taxi drivers in the queue associated to Adam's zone.
\end_layout

\begin_layout Standard
Jim decides to accept Adam's booking, and will keep his schedule free for
 the time that Adam requested.
\end_layout

\begin_layout Subsubsection
Manage Taxi Request
\end_layout

\begin_layout Standard
Later that day, Adam browses the platform's website from his laptop's browser,
 and opens the 
\shape italic
Manage taxi request
\shape default
 page to change the booking time from 6PM to 7PM.
 
\end_layout

\begin_layout Standard
The system checks whether Adam's request is acceptable (there must be at
 least two hours between the current time and the requested time), and eventuall
y forwards the changes to Jim.
\end_layout

\begin_layout Standard
Jim accepts the modification and a confirmation is sent back to Adam.
\end_layout

\begin_layout Subsubsection
Report Taxi
\end_layout

\begin_layout Standard
Jim picks Adam up at 7PM.
 During the ride Jim lights up a cigarette and is unreasonably rude towards
 Adam.
\end_layout

\begin_layout Standard
Adam opens the 
\shape italic
Report taxi
\shape default
 page on the app, to file a complaint about Jim's behavior.
 The system updates Jim's profile information with the new report and confirms
 the success of the operation to Adam.
\end_layout

\begin_layout Subsubsection
Report User
\end_layout

\begin_layout Standard
After the ride, Adam is annoyed by the behavior of Jim and refuses to pay
 for the ride.
\end_layout

\begin_layout Standard
Jim opens the 
\shape italic
Report user
\shape default
 page, fills the complaint form and submits it to the system.
 The system updates Adam's profile information with the new report and confirms
 the success of the operation to Jim.
\end_layout

\begin_layout Subsubsection
Manage Personal Information
\end_layout

\begin_layout Standard
Joanne has opened a new main email account.
\end_layout

\begin_layout Standard
She opens her profile page from the app, clicks on the 
\shape italic
edit
\shape default
 button and changes her email address to match the new one; she then submits
 the new information.
\end_layout

\begin_layout Standard
The system performs a check on the information, updates Joanne's profile
 and notifies the success of the operation to Joanne.
\end_layout

\begin_layout Subsubsection
Report Problem
\end_layout

\begin_layout Standard
During a ride, Hector has a problem with his taxi's engine and can't bring
 Joanne to her destination.
\end_layout

\begin_layout Standard
Through the 
\shape italic
Report problem
\shape default
 page of the app, he notifies the problem to the system by filling the form
 and submitting.
 The system acknowledges the report and asks Hector if he'll be needing
 a new taxi; Hector confirms, and the system forwards his request to Samuel,
 who is the first taxi driver in Hector and Joanne's current zone.
\end_layout

\begin_layout Subsection
Flow of events
\end_layout

\begin_layout Subsubsection
Sign-up
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guest 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest is not registered into the system 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The guest requests the registration page 
\end_layout

\begin_layout Enumerate
The system asks for the sign-up information 
\end_layout

\begin_layout Enumerate
The guest fills the form and submits the request 
\end_layout

\begin_layout Enumerate
The system checks the uniqueness of the username and e-mail 
\end_layout

\begin_layout Enumerate
The system creates the customer (or taxi driver) profile 
\end_layout

\begin_layout Enumerate
The system sends the confirmation to the guest 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest is now a registered user 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The e-mail or username are not unique or, in the case of a taxi driver sign-up,
 the license is not valid 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Signup
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Login
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guest 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest has already a profile into the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The guest requests the login page 
\end_layout

\begin_layout Enumerate
The system requires the login information (Username, password) 
\end_layout

\begin_layout Enumerate
The guest fills the form and submits the request 
\end_layout

\begin_layout Enumerate
The system checks the username and password 
\end_layout

\begin_layout Enumerate
The system sends a login confirmation 
\end_layout

\begin_layout Enumerate
The guest is logged into the system 
\end_layout

\begin_layout Enumerate
The guest is redirected to the user profile page 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest is now a logged-in user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The username-password combination is incorrect, so the guest cannot log
 in 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Login
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Available
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The taxi driver requests their profile page 
\end_layout

\begin_layout Enumerate
The system displays the user's personal information 
\end_layout

\begin_layout Enumerate
The taxi driver can choose to change their availability, becoming available
 or unavailable 
\end_layout

\begin_layout Enumerate
The taxi driver sends the request to the system 
\end_layout

\begin_layout Enumerate
The system updates the queue 
\end_layout

\begin_layout Enumerate
The system returns a confirmation to the taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The taxi driver is now available 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The taxi driver is located in a invalid zone 
\end_layout

\begin_layout Itemize
The taxi driver is carrying a passenger 
\end_layout

\begin_layout Itemize
The taxi driver is not available
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Available
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Taxi Request
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Customer, Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user should not be banned 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The customer requests the 
\shape italic
Taxi request
\shape default
 page 
\end_layout

\begin_layout Enumerate
The system asks for the type of request that the user wants to issue 
\end_layout

\begin_layout Enumerate
The customer fills the request form and sends the information to the system
 
\end_layout

\begin_layout Enumerate
The system forwards the request to the first taxi driver of the local queue
 
\end_layout

\begin_layout Enumerate
If the taxi driver answers positively to the request, he takes the charge
 of the ride, otherwise he denies the request 
\end_layout

\begin_layout Enumerate
If the taxi driver accepts the request, the system notifies to the customer
 the incoming taxi and changes the availability of the taxi driver; otherwise,
 the system updates the queue and forwards the request to the new first
 taxi driver of the queue.
 
\end_layout

\begin_layout Enumerate
If there are no taxis available, the system notifies so to the user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If the request is accepted by a taxi driver, the customer is now a passenger
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The customer provides incorrect information in the request form 
\end_layout

\begin_layout Itemize
The customer is not in a valid position (
\emph on
e.g.
 outside the town
\emph default
) 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename TaxiRequest
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Manage Taxi Request
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Passenger 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The passenger requests the 
\shape italic
Taxi request management
\shape default
 page 
\end_layout

\begin_layout Enumerate
The page is generated by the system on the user's app
\end_layout

\begin_layout Enumerate
The passenger can modify the request by filling the 
\shape italic
Modify request 
\shape default
form
\end_layout

\begin_layout Enumerate
The system modifies the request and returns a confirmation to the passenger
 
\end_layout

\begin_layout Enumerate
The passenger can delete the request, submitting the operation to the system
 
\end_layout

\begin_layout Enumerate
The system updates the queue and returns a confirmation to the passenger
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
If the passenger chooses to modify the request, the request is updated 
\end_layout

\begin_layout Itemize
If the passenger chooses to delete the request, the request is canceled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The passenger provides incorrect information in the 
\shape italic
Modify request
\shape default
 form 
\end_layout

\begin_layout Itemize
The passenger cancel the request too late 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ManageTaxiRequest
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Report Taxi
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Passenger 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The passenger requests the 
\shape italic
Report taxi
\shape default
 page 
\end_layout

\begin_layout Enumerate
The page is shown on the customer's application
\end_layout

\begin_layout Enumerate
The passenger fills the form and submits the report 
\end_layout

\begin_layout Enumerate
The system checks the submitted data
\end_layout

\begin_layout Enumerate
The system updates the taxi driver information 
\end_layout

\begin_layout Enumerate
The system notifies to the passenger the success of the operation 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The taxi driver is reported by the passenger 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The passenger provides incorrect information in the report form 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ReportTaxi
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Report User
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The interaction between customer and taxi driver must have happened at least
 24 hours before
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The taxi driver requests the
\shape italic
 Report user
\shape default
 page 
\end_layout

\begin_layout Enumerate
The page is shown on the taxi driver's application
\end_layout

\begin_layout Enumerate
The taxi driver fills the form and submits the report 
\end_layout

\begin_layout Enumerate
The system checks the submitted data
\end_layout

\begin_layout Enumerate
The system updates the user information 
\end_layout

\begin_layout Enumerate
The system notifies to the taxi driver the success of the operation 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The customer is reported by the taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The taxi driver provides incorrect information in the report form 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ReportUser
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Manage Personal Information
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Customer or Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user requests the their profile page 
\end_layout

\begin_layout Enumerate
The user's personal information is shown on the user's application
\end_layout

\begin_layout Enumerate
The user can request to edit their profile 
\end_layout

\begin_layout Enumerate
The system returns the editable information of the profile 
\end_layout

\begin_layout Enumerate
The user can edit their information and send the changes to the system 
\end_layout

\begin_layout Enumerate
The system performs a check on the new information 
\end_layout

\begin_layout Enumerate
If the information is correct, a confirmation is sent back to the user;
 otherwise, an error messagge is shown.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If the user modifies their profile with correct information, the profile
 is changed 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user provides incorrect information 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ManageInformation
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Report Problem
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="none" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Taxi driver 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Execution Flow 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The taxi driver requests the 
\shape italic
Report problem
\shape default
 page 
\end_layout

\begin_layout Enumerate
The page is shown on the taxi driver's application
\end_layout

\begin_layout Enumerate
The taxi driver fills the form and submits the information 
\end_layout

\begin_layout Enumerate
If the taxi driver has a passenger on board, they can request another taxi
 to drive the passenger to their destination
\end_layout

\begin_layout Enumerate
If the taxi driver requests another taxi the system looks for an available
 taxi driver 
\end_layout

\begin_layout Enumerate
If an available taxi driver is found, a notification is sent to both drivers.
 
\end_layout

\begin_layout Enumerate
If the new taxi driver accepts the ride, a confirmation is sent to the driver
 who is submitting the report; otherwise, the systems looks for other taxi
 drivers until someone accepts the ride, and returns a failure notification
 otherwise.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postconditions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The problem is reported to the system 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
The taxi driver is located in a invalid zone 
\end_layout

\begin_layout Itemize
The taxi driver fills the form with incorrect information
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename NotifyProblem
	width 100text%

\end_inset


\end_layout

\begin_layout Subsection
Entities Behavior
\end_layout

\begin_layout Subsubsection
User
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename UserBehavior
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsubsection
Ride
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename RideBehavior
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsubsection
Queue Manager
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename QueueManagerBehavior
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Performance requirements
\end_layout

\begin_layout Itemize
The system should support at least all the taxi driver registered into the
 Town Database 
\end_layout

\begin_layout Itemize
The system should elaborate user incoming information 
\end_layout

\begin_layout Itemize
The system should provide the faster path for each ride 
\end_layout

\begin_layout Itemize
The system should calculate the final price of the ride with a maximum error
 of 10% 
\end_layout

\begin_layout Itemize
The system should provide to a passenger the arrival time (maximum error
 20%) and change the path in case of traffic 
\end_layout

\begin_layout Subsection
Logical database requirements
\end_layout

\begin_layout Itemize
The system databases has consistency check, data integrity check 
\end_layout

\begin_layout Subsection
Design constraints
\end_layout

\begin_layout Itemize
GPS precision limitations: average 3m error 
\end_layout

\begin_layout Itemize
Internet congestion 
\end_layout

\begin_layout Subsection
Standards compliance
\end_layout

\begin_layout Subsection
Software system attributes
\end_layout

\begin_layout Subsection
Reliability
\end_layout

\begin_layout Subsection
Availability
\end_layout

\begin_layout Enumerate
The platform's services must be available to the users 24/7.
\end_layout

\begin_layout Enumerate
The RTO parameter must be kept at minimal levels (less than 1 minute) at
 any given time.
\end_layout

\begin_deeper
\begin_layout Enumerate
Mission critical data must be locally mirrored on fast hardware (e.g.
 stored in RAID1 arrays with flash storage).
\end_layout

\end_deeper
\begin_layout Enumerate
The RPO parameter must be kept at minimal levels (less than 10 seconds)
 at any given time.
\end_layout

\begin_deeper
\begin_layout Enumerate
Any data must be locally stored in a 10 second time frame from its creation.
\end_layout

\begin_layout Enumerate
Any locally stored data must be locally and remotely mirrored in a 1 minute
 time frame from its memorization.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Data integrity checks must be periodically performed between the main data
 storage unit and the secondary backups, in order to ensure the success
 of disaster recovery operations.
\end_layout

\begin_layout Subsection
Security
\end_layout

\begin_layout Standard
The following non functional requirements cover the security aspects of
 the platform in order, among other reasons, to satisfy the C3 constraint
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Constraints"

\end_inset

.
\end_layout

\begin_layout Enumerate
Access to the user data through the intended applications must be password
 protected.
\end_layout

\begin_deeper
\begin_layout Enumerate
A ban system must exists to prevent brute-forcing of the users' passwords.
\end_layout

\end_deeper
\begin_layout Enumerate
Sensitive user data (like passwords) must be stored under at least one encryptio
n layer, after having been 
\shape italic
salted
\shape default
.
 This applies to secondary storage, too.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Decryption of the above mentioned data must happen exclusively at runtime
 and the 
\shape italic
cleartext 
\shape default
information must never be sent through any communication channels.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Operations on the platform must be performed exclusively by logged users
 (with the exception of the guest registration).
\end_layout

\begin_layout Enumerate
HTTP data exchanges between the back-end and the user-side applications
 must be encrypted with a recognized SSL certificate (HTTPS protocol).
\end_layout

\begin_layout Enumerate
Access to the back-end system must be protected both via hardware and software
 means.
\end_layout

\begin_deeper
\begin_layout Enumerate
A physical firewall must exists between the Internet and the back-end main
 router.
\end_layout

\begin_layout Enumerate
Access to the system must be enabled via IP address whitelisting, rather
 than blacklisting.
\end_layout

\begin_layout Enumerate
Root login must be disabled for remote sessions.
\end_layout

\begin_layout Enumerate
Password login must be disabled and signed PKA must be enforced, for any
 type of session.
\end_layout

\begin_layout Enumerate
Access logs must be kept, backed up, and regularly analyzed.
\end_layout

\end_deeper
\begin_layout Enumerate
Mission critical data must be stored with a particular attention to data
 integrity.
 
\end_layout

\begin_layout Subsection
Maintainability
\end_layout

\begin_layout Standard
The following non functional requirements are meant as a small guideline
 for programmers and designers in the development phase.
\end_layout

\begin_layout Enumerate
The codebase for all developed software must be highly modular to facilitate
 possible changes in the platform's functions and possible integration with
 other systems; this applies especially to the back-end modules.
\end_layout

\begin_layout Enumerate
The codebase for all developed software must be thoroughly documented with
 both in-code comments and official documentation, in order to facilitate
 a possible outsourcing of the maintenance phase.
 
\end_layout

\begin_layout Subsection
Portability
\end_layout

\begin_layout Standard
The following non functional requirements consider technical details of
 the platform's implementation in order to analyze its portability requirements.
 
\end_layout

\begin_layout Standard
When seen as a whole, the platform consists mainly of its user-side applications
, and the back-end accounts for about 25% of the codebase; nonetheless,
 since the user-side applications are strictly OS dependent, as specified
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:User-interface"

\end_inset

, portability is an issue which has to be tackled in back-end development,
 in order to keep costs to a minimum in the case of possible changes in
 the platform (e.g.
 an integration with a pre-existsing system).
 Therefore:
\end_layout

\begin_layout Enumerate
The back-end software must be developed in Java Enterprise Edition.
\end_layout

\begin_layout Enumerate
Integration with support modules must happen through JEE libraries.
\end_layout

\begin_layout Enumerate
Any system related calls, communication protocols and thread related calls
 in the back-end must be OS independent (the use of wrapper libraries is
 encouraged over a case-by-case analysis).
\end_layout

\end_body
\end_document
